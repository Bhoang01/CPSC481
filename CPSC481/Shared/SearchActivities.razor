@inject NavigationManager NavManager
@inject CPSC481.Classes.StateContainer StateContainer
@using CPSC481.Classes

<div class="flex flex-col w-4/5 p-2 pl-4 gap-y-3 max-h-full">
	<h3 class="text-xl font-medium">Search Activity</h3>
	<div class="flex flex-row justify-between items-center w-full">
		<div class="w-1/3 flex flex-col justify-start items-start">
			<form class="p-1 flex flex-row justify-between items-center rounded border-2 border-black">
				<input class="p-1 focus:outline-none bg-cream text-black border-none text-lg w-3/4" type="text"
					placeholder="Ex: Ski" @bind="query" @bind:event="oninput" />
				<button type="submit" class="p-1 rounded bg-blue text-cream text-lg w-1/4 hover:bg-blue2 transition-all"
					@onclick="onClick" @onclick:preventDefault @onkeypress="onClick" @onkeypress:preventDefault>Search</button>
			</form>
		</div>
		@if (StateContainer.getActiveTrip() == null)
		{
			<button class="p-2 w-1/6 rounded bg-blue hover:bg-blue2 transition-all text-center text-lg text-cream"
			@onclick="startTrip">
				Start Your Trip
			</button>
		}
	</div>
	<h3 class="text-xl font-medium">Results</h3>
	@if (StateContainer.getActivities().Length > 0)
	{
		<div class="grid gap-4 grid-cols-4 w-full">
			@foreach (Item a in StateContainer.getActivities())
			{
				<ActivityCard id="@a.id" name="@a.name" url="@a.images[0]" rating="@a.rating" price="@a.price"
			category="@a.category" />
			}
		</div>
	}
	else
	{
		<p class="text-md font-medium text-black">No Activities found :(</p>
	}
</div>

@code {
	[Parameter]
	public string location { get; set; } = String.Empty;
	[Parameter]
	public string? category { get; set; }
	[Parameter]
	public int? minPrice { get; set; }
	[Parameter]
	public int? maxPrice { get; set; }
	[Parameter]
	public int? people { get; set; }
	[Parameter]
	public int? rating { get; set; }
	[Parameter]
	public int? minAge { get; set; }
	[Parameter]
	public int? maxAge { get; set; }
	[Parameter]
	public bool childFriendly { get; set; }
	[Parameter]
	public bool adultsOnly { get; set; }
	private string query = String.Empty;
	void onClick()
	{
		Filters filters = StateContainer.getFilters();
		filters.updateActivityName(query);
		StateContainer.setFilters(filters);
		return;
	}

	void startTrip() { NavManager.NavigateTo("/starttrip"); }


	protected override void OnInitialized()
	{
		if (category == String.Empty)
			category = null;
		if (minPrice == -1)
			minPrice = null;
		if (maxPrice == -1)
			maxPrice = null;
		if (people == -1)
			people = null;
		if (rating == -1)
			rating = null;
		if (minAge == -1)
			minAge = null;
		if (maxAge == -1)
			maxAge = null;
		StateContainer.OnChange += StateHasChanged;
	}
	public void Dispose()
	{
		StateContainer.OnChange -= StateHasChanged;
	}
}